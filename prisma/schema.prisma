// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

enum Role {
  admin
  user
}

model User {
  id           Int           @id @default(autoincrement())
  email        String?       @unique
  phone        String        @unique
  username     String        @unique
  name         String
  role         Role          @default(user)
  password     String
  created_at   DateTime      @default(now())
  updated_at   DateTime      @updatedAt
  device       Device[]
  VerifiedCode VerifiedCode?
}

model Device {
  id           Int          @id @default(autoincrement())
  user_id      Int
  phone        String?      @unique
  name         String
  is_connected Boolean      @default(false)
  created_at   DateTime     @default(now())
  updated_at   DateTime     @updatedAt
  user         User         @relation(fields: [user_id], references: [id])
  device_token DeviceToken?
}

model DeviceToken {
  id         Int      @id @default(autoincrement())
  device_id  Int      @unique
  token      String   @unique
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
  device     Device   @relation(fields: [device_id], references: [id], onDelete: Cascade)

  @@map("device_token")
}

model VerifiedCode {
  id          Int      @id @default(autoincrement())
  user_id     Int      @unique
  code        Int
  is_verified Boolean  @default(false)
  created_at  DateTime @default(now())
  updated_at  DateTime @updatedAt
  user        User     @relation(fields: [user_id], references: [id])

  @@map("verified_code")
}

model NoticeBoard {
  id         Int      @id @default(autoincrement())
  receiver   String
  detail     String
  created_at DateTime @default(now())

  @@map("notice_board")
}
